// Scientific colour maps from https://www.fabiocrameri.ch/colourmaps/
use super::Colour;

pub const ACTON: [Colour; 10] = [
    Colour::new(0x26, 0x0D, 0x40),
    Colour::new(0x3E, 0x2E, 0x5E),
    Colour::new(0x54, 0x4D, 0x7B),
    Colour::new(0x71, 0x61, 0x8C),
    Colour::new(0x93, 0x65, 0x8F),
    Colour::new(0xBD, 0x69, 0x92),
    Colour::new(0xD5, 0x86, 0xAA),
    Colour::new(0xDF, 0xAB, 0xC9),
    Colour::new(0xE9, 0xCE, 0xE4),
    Colour::new(0xF0, 0xEA, 0xFA),
];
pub const BAMAKO: [Colour; 10] = [
    Colour::new(0x00, 0x3B, 0x47),
    Colour::new(0x0E, 0x43, 0x3F),
    Colour::new(0x20, 0x4F, 0x34),
    Colour::new(0x36, 0x5E, 0x26),
    Colour::new(0x52, 0x70, 0x15),
    Colour::new(0x73, 0x83, 0x02),
    Colour::new(0x98, 0x8D, 0x03),
    Colour::new(0xBE, 0xA8, 0x2E),
    Colour::new(0xE2, 0xC8, 0x6E),
    Colour::new(0xFF, 0xE5, 0xAD),
];
pub const BAM: [Colour; 10] = [
    Colour::new(0x65, 0x02, 0x4B),
    Colour::new(0x9E, 0x3C, 0x85),
    Colour::new(0xC9, 0x70, 0xB2),
    Colour::new(0xE4, 0xAE, 0xD6),
    Colour::new(0xF5, 0xE3, 0xEF),
    Colour::new(0xEF, 0xF3, 0xE5),
    Colour::new(0xC1, 0xDA, 0xA2),
    Colour::new(0x7C, 0xA8, 0x56),
    Colour::new(0x45, 0x7B, 0x2A),
    Colour::new(0x0D, 0x4C, 0x00),
];
pub const BAMO: [Colour; 10] = [
    Colour::new(0x4F, 0x30, 0x43),
    Colour::new(0x87, 0x49, 0x79),
    Colour::new(0xB8, 0x77, 0xA7),
    Colour::new(0xD7, 0xB0, 0xC9),
    Colour::new(0xD6, 0xCB, 0xC7),
    Colour::new(0xBA, 0xC4, 0xA1),
    Colour::new(0x83, 0x91, 0x65),
    Colour::new(0x61, 0x65, 0x48),
    Colour::new(0x4C, 0x42, 0x3B),
    Colour::new(0x4E, 0x30, 0x42),
];
pub const BATLOW: [Colour; 10] = [
    Colour::new(0x01, 0x19, 0x59),
    Colour::new(0x10, 0x3F, 0x60),
    Colour::new(0x1C, 0x5A, 0x62),
    Colour::new(0x3C, 0x6D, 0x56),
    Colour::new(0x68, 0x7B, 0x3E),
    Colour::new(0x9D, 0x89, 0x2B),
    Colour::new(0xD2, 0x93, 0x43),
    Colour::new(0xF8, 0xA1, 0x7B),
    Colour::new(0xFD, 0xB7, 0xBC),
    Colour::new(0xFA, 0xCC, 0xFA),
];
pub const BATLOWK: [Colour; 10] = [
    Colour::new(0x04, 0x05, 0x0A),
    Colour::new(0x1A, 0x2C, 0x41),
    Colour::new(0x36, 0x53, 0x5F),
    Colour::new(0x4F, 0x66, 0x57),
    Colour::new(0x6F, 0x78, 0x45),
    Colour::new(0xA1, 0x8E, 0x38),
    Colour::new(0xD8, 0x9E, 0x50),
    Colour::new(0xF6, 0xA9, 0x86),
    Colour::new(0xFD, 0xB9, 0xBF),
    Colour::new(0xFA, 0xCC, 0xFA),
];
pub const BATLOWW: [Colour; 10] = [
    Colour::new(0x01, 0x19, 0x59),
    Colour::new(0x10, 0x3F, 0x60),
    Colour::new(0x1B, 0x59, 0x62),
    Colour::new(0x39, 0x6E, 0x59),
    Colour::new(0x64, 0x7E, 0x43),
    Colour::new(0x9A, 0x91, 0x32),
    Colour::new(0xD0, 0xA3, 0x5A),
    Colour::new(0xEE, 0xAF, 0x91),
    Colour::new(0xFE, 0xD8, 0xD6),
    Colour::new(0xFF, 0xFE, 0xFE),
];
pub const BERLIN: [Colour; 10] = [
    Colour::new(0x9E, 0xB0, 0xFF),
    Colour::new(0x5B, 0xA4, 0xDB),
    Colour::new(0x2D, 0x75, 0x97),
    Colour::new(0x1A, 0x42, 0x56),
    Colour::new(0x11, 0x19, 0x1E),
    Colour::new(0x28, 0x0D, 0x01),
    Colour::new(0x50, 0x18, 0x03),
    Colour::new(0x8A, 0x3F, 0x2A),
    Colour::new(0xC4, 0x75, 0x6A),
    Colour::new(0xFF, 0xAD, 0xAD),
];
pub const BILBAO: [Colour; 10] = [
    Colour::new(0x4C, 0x00, 0x01),
    Colour::new(0x73, 0x25, 0x29),
    Colour::new(0x94, 0x46, 0x4B),
    Colour::new(0xA0, 0x62, 0x57),
    Colour::new(0xA6, 0x77, 0x5C),
    Colour::new(0xAC, 0x8D, 0x61),
    Colour::new(0xB5, 0xA7, 0x72),
    Colour::new(0xC2, 0xBC, 0xA3),
    Colour::new(0xD2, 0xD2, 0xCE),
    Colour::new(0xFF, 0xFF, 0xFF),
];
pub const BROC: [Colour; 10] = [
    Colour::new(0x2C, 0x1A, 0x4C),
    Colour::new(0x28, 0x44, 0x77),
    Colour::new(0x4B, 0x76, 0xA0),
    Colour::new(0x8B, 0xA7, 0xC2),
    Colour::new(0xCE, 0xD9, 0xE5),
    Colour::new(0xE8, 0xE8, 0xD2),
    Colour::new(0xC5, 0xC5, 0x8F),
    Colour::new(0x8D, 0x8D, 0x56),
    Colour::new(0x55, 0x55, 0x27),
    Colour::new(0x26, 0x26, 0x00),
];
pub const BROCO: [Colour; 10] = [
    Colour::new(0x37, 0x2F, 0x38),
    Colour::new(0x38, 0x41, 0x64),
    Colour::new(0x55, 0x72, 0x9A),
    Colour::new(0x8A, 0xA3, 0xBF),
    Colour::new(0xC1, 0xCC, 0xD0),
    Colour::new(0xCA, 0xCB, 0xAB),
    Colour::new(0x9E, 0x9E, 0x6C),
    Colour::new(0x6B, 0x69, 0x3D),
    Colour::new(0x44, 0x3F, 0x29),
    Colour::new(0x37, 0x2F, 0x37),
];
pub const BUDA: [Colour; 10] = [
    Colour::new(0xB3, 0x01, 0xB3),
    Colour::new(0xB3, 0x2B, 0x9E),
    Colour::new(0xB9, 0x48, 0x92),
    Colour::new(0xC2, 0x61, 0x8A),
    Colour::new(0xCA, 0x79, 0x82),
    Colour::new(0xD1, 0x91, 0x7B),
    Colour::new(0xD7, 0xAA, 0x75),
    Colour::new(0xDD, 0xC3, 0x6F),
    Colour::new(0xE5, 0xDF, 0x68),
    Colour::new(0xFF, 0xFF, 0x66),
];
pub const BUKAVU: [Colour; 10] = [
    Colour::new(0x1A, 0x33, 0x33),
    Colour::new(0x22, 0x51, 0x78),
    Colour::new(0x34, 0x85, 0xC2),
    Colour::new(0x66, 0xB5, 0xCA),
    Colour::new(0xB3, 0xE6, 0xD9),
    Colour::new(0x13, 0x53, 0x18),
    Colour::new(0x69, 0x73, 0x28),
    Colour::new(0xAA, 0x84, 0x4F),
    Colour::new(0xD3, 0xC2, 0xAA),
    Colour::new(0xED, 0xED, 0xFC),
];
pub const CORK: [Colour; 10] = [
    Colour::new(0x2C, 0x19, 0x4C),
    Colour::new(0x28, 0x45, 0x78),
    Colour::new(0x49, 0x74, 0x9F),
    Colour::new(0x83, 0xA1, 0xBE),
    Colour::new(0xCA, 0xD7, 0xE3),
    Colour::new(0xD2, 0xE1, 0xD2),
    Colour::new(0x8E, 0xB3, 0x8D),
    Colour::new(0x4F, 0x89, 0x4E),
    Colour::new(0x1C, 0x5B, 0x19),
    Colour::new(0x0F, 0x29, 0x03),
];
pub const CORKO: [Colour; 10] = [
    Colour::new(0x3F, 0x3E, 0x3A),
    Colour::new(0x3E, 0x44, 0x5D),
    Colour::new(0x54, 0x6E, 0x94),
    Colour::new(0x84, 0x9E, 0xBA),
    Colour::new(0xAD, 0xC4, 0xC8),
    Colour::new(0xA1, 0xC4, 0xA6),
    Colour::new(0x73, 0xA3, 0x6F),
    Colour::new(0x4F, 0x73, 0x3B),
    Colour::new(0x43, 0x4F, 0x2C),
    Colour::new(0x3F, 0x3E, 0x3A),
];
pub const DAVOS: [Colour; 10] = [
    Colour::new(0x00, 0x05, 0x4A),
    Colour::new(0x11, 0x2C, 0x71),
    Colour::new(0x29, 0x52, 0x91),
    Colour::new(0x43, 0x70, 0x9D),
    Colour::new(0x5E, 0x85, 0x98),
    Colour::new(0x79, 0x96, 0x8D),
    Colour::new(0x99, 0xAD, 0x88),
    Colour::new(0xC9, 0xD2, 0x9E),
    Colour::new(0xF3, 0xF3, 0xD2),
    Colour::new(0xFE, 0xFE, 0xFE),
];
pub const DEVON: [Colour; 10] = [
    Colour::new(0x2C, 0x1A, 0x4C),
    Colour::new(0x29, 0x34, 0x67),
    Colour::new(0x27, 0x51, 0x86),
    Colour::new(0x36, 0x69, 0xAD),
    Colour::new(0x61, 0x81, 0xD0),
    Colour::new(0x98, 0x9B, 0xE7),
    Colour::new(0xBA, 0xB3, 0xF1),
    Colour::new(0xD0, 0xCC, 0xF5),
    Colour::new(0xE8, 0xE5, 0xFA),
    Colour::new(0xFF, 0xFF, 0xFF),
];
pub const FES: [Colour; 10] = [
    Colour::new(0x0D, 0x0D, 0x0D),
    Colour::new(0x40, 0x40, 0x40),
    Colour::new(0x6D, 0x6D, 0x6D),
    Colour::new(0x97, 0x97, 0x97),
    Colour::new(0xCE, 0xCE, 0xCE),
    Colour::new(0x2E, 0x50, 0x20),
    Colour::new(0x75, 0x64, 0x2A),
    Colour::new(0xB6, 0x83, 0x4D),
    Colour::new(0xD3, 0xC2, 0xAA),
    Colour::new(0xED, 0xED, 0xFC),
];
pub const GLASGOW: [Colour; 10] = [
    Colour::new(0x36, 0x13, 0x38),
    Colour::new(0x4F, 0x1A, 0x23),
    Colour::new(0x6B, 0x26, 0x0B),
    Colour::new(0x74, 0x45, 0x00),
    Colour::new(0x71, 0x63, 0x11),
    Colour::new(0x68, 0x7C, 0x48),
    Colour::new(0x60, 0x92, 0x7D),
    Colour::new(0x74, 0xA9, 0xB0),
    Colour::new(0xA6, 0xBE, 0xD8),
    Colour::new(0xDB, 0xD3, 0xFF),
];
pub const GREYC: [Colour; 10] = [
    Colour::new(0x00, 0x00, 0x00),
    Colour::new(0x23, 0x23, 0x23),
    Colour::new(0x3D, 0x3D, 0x3D),
    Colour::new(0x56, 0x56, 0x56),
    Colour::new(0x6C, 0x6C, 0x6C),
    Colour::new(0x82, 0x82, 0x82),
    Colour::new(0x9A, 0x9A, 0x9A),
    Colour::new(0xB6, 0xB6, 0xB6),
    Colour::new(0xD8, 0xD8, 0xD8),
    Colour::new(0xFF, 0xFF, 0xFF),
];
pub const HAWAII: [Colour; 10] = [
    Colour::new(0x8C, 0x02, 0x73),
    Colour::new(0x92, 0x2A, 0x59),
    Colour::new(0x96, 0x47, 0x42),
    Colour::new(0x99, 0x63, 0x30),
    Colour::new(0x9D, 0x83, 0x1E),
    Colour::new(0x97, 0xA9, 0x2A),
    Colour::new(0x80, 0xC5, 0x5F),
    Colour::new(0x66, 0xD8, 0x9C),
    Colour::new(0x6C, 0xEB, 0xDB),
    Colour::new(0xB3, 0xF2, 0xFD),
];
pub const IMOLA: [Colour; 10] = [
    Colour::new(0x1A, 0x33, 0xB3),
    Colour::new(0x24, 0x46, 0xA9),
    Colour::new(0x2E, 0x59, 0x9F),
    Colour::new(0x39, 0x6B, 0x94),
    Colour::new(0x49, 0x7B, 0x85),
    Colour::new(0x60, 0x92, 0x7B),
    Colour::new(0x7B, 0xAE, 0x74),
    Colour::new(0x98, 0xCB, 0x6D),
    Colour::new(0xC4, 0xEA, 0x67),
    Colour::new(0xFF, 0xFF, 0x66),
];
pub const LAJOLLA: [Colour; 10] = [
    Colour::new(0x19, 0x19, 0x00),
    Colour::new(0x33, 0x22, 0x0F),
    Colour::new(0x5B, 0x30, 0x23),
    Colour::new(0x8F, 0x40, 0x3D),
    Colour::new(0xC7, 0x50, 0x4B),
    Colour::new(0xE0, 0x72, 0x4F),
    Colour::new(0xE7, 0x94, 0x52),
    Colour::new(0xEE, 0xB5, 0x55),
    Colour::new(0xF8, 0xDF, 0x7C),
    Colour::new(0xFF, 0xFE, 0xCB),
];
pub const LAPAZ: [Colour; 10] = [
    Colour::new(0x1A, 0x0C, 0x64),
    Colour::new(0x23, 0x2D, 0x7B),
    Colour::new(0x2A, 0x4C, 0x8F),
    Colour::new(0x36, 0x67, 0x9D),
    Colour::new(0x4C, 0x80, 0xA3),
    Colour::new(0x6E, 0x95, 0xA1),
    Colour::new(0x94, 0xA2, 0x98),
    Colour::new(0xBF, 0xB1, 0x99),
    Colour::new(0xEF, 0xD3, 0xC0),
    Colour::new(0xFE, 0xF2, 0xF3),
];
pub const LIPARI: [Colour; 10] = [
    Colour::new(0x03, 0x13, 0x26),
    Colour::new(0x13, 0x38, 0x5A),
    Colour::new(0x47, 0x58, 0x7A),
    Colour::new(0x6B, 0x5F, 0x76),
    Colour::new(0x8E, 0x61, 0x6C),
    Colour::new(0xBC, 0x64, 0x61),
    Colour::new(0xE5, 0x7B, 0x62),
    Colour::new(0xE7, 0xA2, 0x79),
    Colour::new(0xE9, 0xC9, 0x9F),
    Colour::new(0xFD, 0xF5, 0xDA),
];
pub const LISBON: [Colour; 10] = [
    Colour::new(0xE6, 0xE5, 0xFF),
    Colour::new(0x9B, 0xAF, 0xD3),
    Colour::new(0x51, 0x77, 0xA4),
    Colour::new(0x1E, 0x43, 0x68),
    Colour::new(0x11, 0x1E, 0x2C),
    Colour::new(0x27, 0x25, 0x1A),
    Colour::new(0x57, 0x51, 0x34),
    Colour::new(0x8D, 0x85, 0x56),
    Colour::new(0xC9, 0xC3, 0x90),
    Colour::new(0xFF, 0xFF, 0xD9),
];
pub const MANAGUA: [Colour; 10] = [
    Colour::new(0xFF, 0xCF, 0x67),
    Colour::new(0xDD, 0x9A, 0x55),
    Colour::new(0xB9, 0x6C, 0x46),
    Colour::new(0x92, 0x46, 0x3B),
    Colour::new(0x67, 0x2B, 0x3C),
    Colour::new(0x4E, 0x31, 0x5E),
    Colour::new(0x4E, 0x55, 0x93),
    Colour::new(0x5B, 0x80, 0xBC),
    Colour::new(0x6D, 0xB1, 0xDE),
    Colour::new(0x81, 0xE7, 0xFF),
];
pub const NAVIA: [Colour; 10] = [
    Colour::new(0x03, 0x13, 0x27),
    Colour::new(0x07, 0x34, 0x5E),
    Colour::new(0x15, 0x58, 0x8B),
    Colour::new(0x28, 0x72, 0x8F),
    Colour::new(0x38, 0x82, 0x85),
    Colour::new(0x4B, 0x93, 0x7A),
    Colour::new(0x65, 0xAB, 0x6C),
    Colour::new(0x98, 0xCB, 0x6F),
    Colour::new(0xD8, 0xE5, 0xA8),
    Colour::new(0xFC, 0xF4, 0xD9),
];
pub const NUUK: [Colour; 10] = [
    Colour::new(0x05, 0x59, 0x8C),
    Colour::new(0x29, 0x62, 0x84),
    Colour::new(0x4A, 0x72, 0x83),
    Colour::new(0x6F, 0x87, 0x8D),
    Colour::new(0x92, 0x9C, 0x96),
    Colour::new(0xAB, 0xAD, 0x96),
    Colour::new(0xBA, 0xB9, 0x8D),
    Colour::new(0xC7, 0xC6, 0x84),
    Colour::new(0xE0, 0xE0, 0x8E),
    Colour::new(0xFE, 0xFE, 0xB2),
];
pub const OLERON: [Colour; 10] = [
    Colour::new(0x1A, 0x26, 0x59),
    Colour::new(0x45, 0x52, 0x85),
    Colour::new(0x77, 0x84, 0xB7),
    Colour::new(0xAA, 0xB7, 0xE8),
    Colour::new(0xD3, 0xE0, 0xFA),
    Colour::new(0x3C, 0x56, 0x00),
    Colour::new(0x7A, 0x71, 0x1F),
    Colour::new(0xB7, 0x9A, 0x5E),
    Colour::new(0xF1, 0xCE, 0xA4),
    Colour::new(0xFD, 0xFD, 0xE6),
];
pub const OSLO: [Colour; 10] = [
    Colour::new(0x01, 0x01, 0x01),
    Colour::new(0x0D, 0x1B, 0x29),
    Colour::new(0x13, 0x32, 0x51),
    Colour::new(0x1F, 0x4C, 0x7B),
    Colour::new(0x38, 0x69, 0xA8),
    Colour::new(0x65, 0x8A, 0xC7),
    Colour::new(0x89, 0xA0, 0xCA),
    Colour::new(0xAA, 0xB6, 0xCA),
    Colour::new(0xD4, 0xD6, 0xDB),
    Colour::new(0xFF, 0xFF, 0xFF),
];
pub const ROMA: [Colour; 10] = [
    Colour::new(0x7E, 0x17, 0x00),
    Colour::new(0x99, 0x52, 0x15),
    Colour::new(0xB0, 0x80, 0x2B),
    Colour::new(0xC8, 0xB4, 0x55),
    Colour::new(0xD0, 0xE3, 0xA3),
    Colour::new(0xA4, 0xE5, 0xD3),
    Colour::new(0x5D, 0xC1, 0xD3),
    Colour::new(0x32, 0x92, 0xC2),
    Colour::new(0x20, 0x64, 0xAE),
    Colour::new(0x03, 0x31, 0x98),
];
pub const ROMAO: [Colour; 10] = [
    Colour::new(0x73, 0x39, 0x57),
    Colour::new(0x87, 0x40, 0x37),
    Colour::new(0xA3, 0x67, 0x2C),
    Colour::new(0xC3, 0xA3, 0x4B),
    Colour::new(0xD6, 0xD8, 0x93),
    Colour::new(0xB4, 0xDE, 0xC6),
    Colour::new(0x74, 0xBB, 0xCD),
    Colour::new(0x4F, 0x88, 0xB9),
    Colour::new(0x5C, 0x53, 0x8B),
    Colour::new(0x72, 0x39, 0x59),
];
pub const TOFINO: [Colour; 10] = [
    Colour::new(0xDE, 0xD9, 0xFF),
    Colour::new(0x93, 0xA4, 0xDE),
    Colour::new(0x4A, 0x6B, 0xAC),
    Colour::new(0x27, 0x3C, 0x65),
    Colour::new(0x12, 0x19, 0x26),
    Colour::new(0x12, 0x22, 0x14),
    Colour::new(0x24, 0x4D, 0x28),
    Colour::new(0x3F, 0x81, 0x44),
    Colour::new(0x88, 0xB9, 0x70),
    Colour::new(0xDB, 0xE6, 0x9B),
];
pub const TOKYO: [Colour; 10] = [
    Colour::new(0x1C, 0x0E, 0x34),
    Colour::new(0x4B, 0x20, 0x44),
    Colour::new(0x69, 0x40, 0x4E),
    Colour::new(0x70, 0x57, 0x51),
    Colour::new(0x72, 0x67, 0x53),
    Colour::new(0x76, 0x7B, 0x54),
    Colour::new(0x7C, 0x98, 0x59),
    Colour::new(0x8D, 0xC1, 0x6E),
    Colour::new(0xC1, 0xED, 0xAB),
    Colour::new(0xEF, 0xFC, 0xDD),
];
pub const TURKU: [Colour; 10] = [
    Colour::new(0x00, 0x00, 0x00),
    Colour::new(0x24, 0x24, 0x20),
    Colour::new(0x42, 0x42, 0x35),
    Colour::new(0x5F, 0x5F, 0x44),
    Colour::new(0x7E, 0x7C, 0x52),
    Colour::new(0xA9, 0x99, 0x65),
    Colour::new(0xCF, 0xA6, 0x7C),
    Colour::new(0xEA, 0xAD, 0x98),
    Colour::new(0xFC, 0xC7, 0xC3),
    Colour::new(0xFF, 0xE6, 0xE6),
];
pub const VANIMO: [Colour; 10] = [
    Colour::new(0xFF, 0xCD, 0xFD),
    Colour::new(0xD3, 0x81, 0xC4),
    Colour::new(0xA1, 0x49, 0x8E),
    Colour::new(0x5C, 0x24, 0x4F),
    Colour::new(0x23, 0x14, 0x1D),
    Colour::new(0x1B, 0x1E, 0x11),
    Colour::new(0x36, 0x49, 0x1A),
    Colour::new(0x5A, 0x7C, 0x2A),
    Colour::new(0x85, 0xB5, 0x4D),
    Colour::new(0xBE, 0xFD, 0xA5),
];
pub const VIK: [Colour; 10] = [
    Colour::new(0x00, 0x12, 0x61),
    Colour::new(0x03, 0x3E, 0x7D),
    Colour::new(0x1E, 0x6F, 0x9D),
    Colour::new(0x71, 0xA8, 0xC4),
    Colour::new(0xC9, 0xDD, 0xE7),
    Colour::new(0xEA, 0xCE, 0xBD),
    Colour::new(0xD3, 0x97, 0x74),
    Colour::new(0xBE, 0x65, 0x33),
    Colour::new(0x8B, 0x27, 0x06),
    Colour::new(0x59, 0x00, 0x08),
];
pub const VIKO: [Colour; 10] = [
    Colour::new(0x4F, 0x1A, 0x3D),
    Colour::new(0x3A, 0x35, 0x67),
    Colour::new(0x3B, 0x67, 0x97),
    Colour::new(0x75, 0x9E, 0xBC),
    Colour::new(0xBE, 0xC2, 0xC6),
    Colour::new(0xD9, 0xAE, 0x97),
    Colour::new(0xC5, 0x7C, 0x56),
    Colour::new(0x95, 0x3E, 0x25),
    Colour::new(0x68, 0x19, 0x23),
    Colour::new(0x50, 0x19, 0x3C),
];
